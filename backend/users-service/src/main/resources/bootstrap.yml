spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/online-university
    username: ${DB_POSTGRESQL_USERNAME}
    password: ${DB_POSTGRESQL_PASSWORD}
  # JPA properties
  jpa:
    hibernate:
      ddl-auto: update # When you launch the application for the first time - switch "none" at "create"
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true
    # Session storage
  redis:
    host: localhost
    port: 6379
#  session:
#    store-type: redis
  main.allow-bean-definition-overriding: true
  jackson:
    default-property-inclusion: non_empty
  messages:
    basename: i18n/messages
    encoding: UTF-8
  cloud:
    config:
      uri: http://localhost:8888
  application:
    name: user-service
  rabbitmq:
    host: localhost
    port: 5672
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    microservices:
      email:
        exchange: email.exchange
        queue: email.queue
        routingkey: email.routingkey
server:
  port: 8083
eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
management:
  endpoints:
    web:
      exposure:
        include: '*'
link:
  value: http://localhost:8083
token:
  secret: ${TOKEN_SECRET}
  expiration: ${TOKEN_EXPIRATION}
